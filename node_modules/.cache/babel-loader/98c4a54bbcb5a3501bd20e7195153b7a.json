{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\React\\\\Thobo_nights\\\\Thobor_nights\\\\src\\\\components\\\\Counter.jsx\";\n// import React, { useState } from \"react\";\n// import Timp from './Timp'\n// function Counter({ intrebare }) {\n//   const [time, setTime] = useState({ s: 0, m: 0, h: 0 });\n//     const [interv, setInterv] = useState();\n//     var updatedS = time.s, updatedM = time.m, updatedH = time.h;\n//     const start = () => {\n//         run();\n//         setInterval(run, 100);\n//     }\n//     const run = () => {\n//         if (updatedM === 60) {\n//             updatedH++;\n//             updatedM = 0;\n//         }\n//         if (updatedS === 60) {\n//             updatedM++;\n//             updatedS = 0\n//         }\n//         updatedS++;\n//         return setTime({s:updatedS, m:updatedM, h:updatedH})\n//     }\n//     if (window.sessionStorage.getItem(\"Start\")) {\n//         setTimeout(() => {\n//             start();\n//         }, 1000);\n//     }\n//   return (\n//     <>\n//       <div className=\"exercitii\">\n//               <h2>Intrebarea {intrebare} - <Timp time={time} /></h2>\n//       </div>\n//     </>\n//   );\n// }\n// export default Counter;\nimport React from \"react\";\nimport Timp from \"./Timp\";\nCounter.propTypes = {\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool\n};\n\nfunction Counter() {\n  var counter = 0;\n  let four = Math.floor(Math.random() / 10000);\n  let three = Math.floor(Math.random() / 1000);\n  let two = Math.floor(Math.random() / 100);\n  let one = Math.floor(Math.random() / 10);\n  console.log(four, three, two, one);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Timp, {\n      time: counter.indexOf(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/xampp/htdocs/React/Thobo_nights/Thobor_nights/src/components/Counter.jsx"],"names":["React","Timp","Counter","propTypes","optionalArray","PropTypes","array","optionalBool","bool","counter","four","Math","floor","random","three","two","one","console","log","indexOf"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGAC,OAAO,CAACC,SAAR,GAAoB;AAChBC,EAAAA,aAAa,EAAEC,SAAS,CAACC,KADT;AAEhBC,EAAAA,YAAY,EAAEF,SAAS,CAACG;AAFR,CAApB;;AAKA,SAASN,OAAT,GAAmB;AACjB,MAAIO,OAAO,GAAG,CAAd;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAX;AACA,MAAIC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAZ;AACA,MAAIE,GAAG,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV;AACA,MAAIG,GAAG,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAV;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkBI,KAAlB,EAAyBC,GAAzB,EAA8BC,GAA9B;AAGA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEP,OAAO,CAACU,OAAR,CAAgB,CAAhB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAfQjB,O;AAiBT,eAAeA,OAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import Timp from './Timp'\r\n\r\n// function Counter({ intrebare }) {\r\n//   const [time, setTime] = useState({ s: 0, m: 0, h: 0 });\r\n//     const [interv, setInterv] = useState();\r\n//     var updatedS = time.s, updatedM = time.m, updatedH = time.h;\r\n\r\n//     const start = () => {\r\n//         run();\r\n//         setInterval(run, 100);\r\n//     }\r\n\r\n//     const run = () => {\r\n//         if (updatedM === 60) {\r\n//             updatedH++;\r\n//             updatedM = 0;\r\n//         }\r\n//         if (updatedS === 60) {\r\n//             updatedM++;\r\n//             updatedS = 0\r\n//         }\r\n//         updatedS++;\r\n//         return setTime({s:updatedS, m:updatedM, h:updatedH})\r\n//     }\r\n\r\n//     if (window.sessionStorage.getItem(\"Start\")) {\r\n//         setTimeout(() => {\r\n//             start();\r\n//         }, 1000);\r\n//     }\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"exercitii\">\r\n//               <h2>Intrebarea {intrebare} - <Timp time={time} /></h2>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Counter;\r\n\r\nimport React from \"react\";\r\nimport Timp from \"./Timp\";\r\n\r\n\r\nCounter.propTypes = {\r\n    optionalArray: PropTypes.array,\r\n    optionalBool: PropTypes.bool,\r\n  };\r\n\r\nfunction Counter() {\r\n  var counter = 0;\r\n  let four = Math.floor(Math.random() / 10000);\r\n  let three = Math.floor(Math.random() / 1000);\r\n  let two = Math.floor(Math.random() / 100);\r\n  let one = Math.floor(Math.random() / 10);\r\n\r\n  console.log(four, three, two, one);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Timp time={counter.indexOf(0)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}