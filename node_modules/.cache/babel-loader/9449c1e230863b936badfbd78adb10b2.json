{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\React\\\\Thobo_nights\\\\Thobor_nights\\\\src\\\\components\\\\Counter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Timp from './Timp';\n\nfunction Counter({\n  intrebare\n}) {\n  _s();\n\n  const [time, setTime] = useState({\n    s: 0,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  var updatedS = time.s,\n      updatedM = time.m,\n      updatedH = time.h;\n\n  const start = () => {\n    run();\n    setInterval(run, 100);\n  };\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    updatedS++;\n    return setTime({\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  if (window.sessionStorage.getItem(\"Start\")) {\n    setInterval(run);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercitii\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Intrebarea \", intrebare, \" - \", /*#__PURE__*/_jsxDEV(Timp, {\n          time: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Counter, \"Dxl0EbJ89NKYujlir98jLLXPn+4=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/xampp/htdocs/React/Thobo_nights/Thobor_nights/src/components/Counter.jsx"],"names":["React","useState","Timp","Counter","intrebare","time","setTime","s","m","h","interv","setInterv","updatedS","updatedM","updatedH","start","run","setInterval","window","sessionStorage","getItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAAEM,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcC,IAAAA,CAAC,EAAE;AAAjB,GAAD,CAAhC;AACE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,MAAIW,QAAQ,GAAGP,IAAI,CAACE,CAApB;AAAA,MAAuBM,QAAQ,GAAGR,IAAI,CAACG,CAAvC;AAAA,MAA0CM,QAAQ,GAAGT,IAAI,CAACI,CAA1D;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAChBC,IAAAA,GAAG;AACHC,IAAAA,WAAW,CAACD,GAAD,EAAM,GAAN,CAAX;AACH,GAHD;;AAKA,QAAMA,GAAG,GAAG,MAAM;AACd,QAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACjBC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAID,QAAQ,KAAK,EAAjB,EAAqB;AACjBC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACDA,IAAAA,QAAQ;AACR,WAAON,OAAO,CAAC;AAACC,MAAAA,CAAC,EAACK,QAAH;AAAaJ,MAAAA,CAAC,EAACK,QAAf;AAAyBJ,MAAAA,CAAC,EAACK;AAA3B,KAAD,CAAd;AACH,GAXD;;AAaA,MAAII,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAAJ,EAA4C;AACxCH,IAAAA,WAAW,CAACD,GAAD,CAAX;AACH;;AAEH,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACQ;AAAA,kCAAgBZ,SAAhB,sBAA6B,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAlCQF,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Timp from './Timp'\r\n\r\nfunction Counter({ intrebare }) {\r\n  const [time, setTime] = useState({ s: 0, m: 0, h: 0 });\r\n    const [interv, setInterv] = useState();\r\n    var updatedS = time.s, updatedM = time.m, updatedH = time.h;\r\n\r\n    const start = () => {\r\n        run();\r\n        setInterval(run, 100);\r\n    }\r\n\r\n    const run = () => {\r\n        if (updatedM === 60) {\r\n            updatedH++;\r\n            updatedM = 0;\r\n        }\r\n        if (updatedS === 60) {\r\n            updatedM++;\r\n            updatedS = 0\r\n        }\r\n        updatedS++;\r\n        return setTime({s:updatedS, m:updatedM, h:updatedH})\r\n    }\r\n\r\n    if (window.sessionStorage.getItem(\"Start\")) {\r\n        setInterval(run)\r\n    }\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"exercitii\">\r\n              <h2>Intrebarea {intrebare} - <Timp time={time} /></h2>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}